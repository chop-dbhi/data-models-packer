machine:
  services:
    - docker
  environment:
    # Make CircleCI specific environment variables more generic.
    BUILD_NUM: "${CIRCLE_BUILD_NUM}"
    COMMIT_SHA1: "${CIRCLE_SHA1}"
    BRANCH: "${CIRCLE_BRANCH}"
    APP_NAME: "${CIRCLE_PROJECT_REPONAME}"
    ARTIFACT_DIR: "${CIRCLE_ARTIFACTS}"
    TEST_OUTPUT_DIR: "${CIRCLE_TEST_REPORTS}"

dependencies:
  cache_directories:
    # Add a cache directory to save docker images to.
    - "~/docker"
  override:
    # Install go dependencies, including those for testing.
    - make test-install
    # Install coverage, coveralls integration, and html coverage dependencies.
    - go get github.com/axw/gocov/gocov
    - go get github.com/mattn/goveralls
    - go get gopkg.in/matm/v1/gocov-html
    - go get github.com/jstemmer/go-junit-report
    # Install this package to the GOPATH.
    - go get github.com/chop-dbhi/data-models-packer
    # Build the package.
    - GIT_SHA=$(shell git log -1 --pretty=format:"%h") go build
      -ldflags "-X packer.progBuild='$(GIT_SHA)'"
      -o /home/ubuntu/.go_workspace/bin/data-models-packer ./cmd/packer
    # Load data-models-service (dms) image if it exists in cache, or pull it.
    - if [[ -e ~/docker/dms.tar ]]; then docker load --input
      ~/docker/dms.tar; else docker pull dbhi/data-models; fi
    # Save dms image if it doesn't exist.
    - if [[ ! -e ~/docker/dms.tar ]]; then mkdir -p ~/docker; docker save
      dbhi/data-models > ~/docker/dms.tar; fi

test:
  override:
    # Create test output directory.
    - mkdir -p "${TEST_OUTPUT_DIR}/gotest"
    # Run tests outputting coverage and jUnit XML data.
    - cd /home/ubuntu/.go_workspace/src/github.com/chop-dbhi/data-models-packer
      && go test -v -coverprofile="${ARTIFACT_DIR}/packer.out" |
      go-junit-report > "${TEST_OUTPUT_DIR}/gotest/packer.xml"
  post:
    # Convert to gocov format.
    - gocov convert "${ARTIFACT_DIR}/packer.out" > "${ARTIFACT_DIR}/packer.json"
    # Convert to html.
    - gocov-html "${ARTIFACT_DIR}/packer.json" > "${ARTIFACT_DIR}/packer.html"
    # Submit to coveralls.
    - goveralls -gocovdata="${ARTIFACT_DIR}/packer.json" -service=circle-ci
      -repotoken="${COVERALLS_TOKEN}"
